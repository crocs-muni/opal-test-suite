#!/bin/bash

ME="set_locking_range"
QUIET=false
VERBOSE=-V

[ -z "$CONTROL_PATH" ] && CONTROL_PATH="opal-toolset"
CONTROL=$CONTROL_PATH/control
[ ! -f "$CONTROL" ] && printf "invalid path $CONTROL\n" && exit 1

[ -z "$LR_START" ] && LR_START=0
[ -z "$LR_LENGTH" ] && LR_LENGTH=512

[ -z "$LR_ID" ] && LR_ID=1
[ -z "$USER_ID" ] && USER_ID=2

[ -z "$DEV" ] && printf "[WARNING] variable DEV must be defined (partition or block device), test skipped\n" && exit 1
[ -z "$USER_VERIFY_PIN" ] && printf "[WARNING] variable ADMIN_VERIFY_PIN must be defined, test skipped\n" && exit 1

[ $# -eq 1 ] && [ "$1" == "-q" ] && QUIET=true && unset VERBOSE

if [ $QUIET == "false" ]; then printf "\n[${ME}] setting new locking range with id ${LR_ID} for user ${USER_ID}\n\n"; fi

$CONTROL $VERBOSE setup_range $DEV      \
	--verify-pin $USER_VERIFY_PIN       \
	--locking-range $LR_ID              \
	--locking-range-start $LR_START     \
	--locking-range-length $LR_LENGTH   \
	--user $USER_ID                     \
	--sum                               \
	|| { printf "\n[${ME}] setting new locking range with id ${LR_ID} failed\n" && exit 1; }

if [ $QUIET == "false" ]; then printf "\nDone.\n"; fi
