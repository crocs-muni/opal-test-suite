# SPDX-License-Identifier:Â MIT

#!/bin/bash

GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m'

# Update opal-toolset submodule
printf "Updating opal-toolset ...\n"
git submodule update --init --remote --merge >/dev/null || { printf "\n${RED}ERROR: update of opal-toolset failed, test cancelled${NC}\n" && exit 1; }
( cd opal-toolset && make >/dev/null 2>&1 ) || { printf "\n${RED}ERROR: build of opal-toolset failed, test cancelled${NC}\n" && exit 1; }
echo

[ -z "$DEV" ] && printf "WARNING: variable DEV must be defined (partition or block device), test skipped\n" && exit 1
[ -z "$PSID" ] && printf "WARNING: variable PSID must be defined, test skipped\n" && exit 1
PIN_ADMIN=0000
PIN_USER=1111
LR_ID=1

# Test
DEV=$DEV PSID=$PSID ./psid_reset || exit 1

DEV=$DEV ADMIN_PIN=$PIN_ADMIN ./set_admin_pin || exit 1

DEV=$DEV ADMIN_VERIFY_PIN=$PIN_ADMIN USER_ASSIGN_PIN=$PIN_USER ./set_user || exit 1

DEV=$DEV ADMIN_VERIFY_PIN=$PIN_ADMIN ./set_locking_range || exit 1

DEV=$DEV PIN=$PIN_USER AUTHORITY="user" ./list_locking_range || exit 1

DEV=$DEV PIN=$PIN_USER LR_ID=$LR_ID AUTHORITY="user" ./lock_lr || exit 1

DEV=$DEV ADMIN_VERIFY_PIN=$PIN_ADMIN ./regenerate_lr_key || exit 1

printf "\n${GREEN}[BASIC OPERATIONS] all operations finished successfully${NC}\n"
