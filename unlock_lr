#!/bin/bash

QUIET=false
VERBOSE=-V

# Set path to the control tool.
[ -z "$CONTROL_PATH" ] && CONTROL_PATH="opal-toolset"
CONTROL=$CONTROL_PATH/control
[ ! -f "$CONTROL" ] && printf "Invalid path $CONTROL.\n" && exit 1

[ -z "$DEV" ] && printf "WARNING: Variable DEV must be defined (partition or block device), test skipped.\n" && exit 1
[ -z "$PIN" ] && printf "WARNING: Variable PIN must be defined (user or admin PIN), test skipped.\n" && exit 1
[ -z "$AUTHORITY" ] && printf "WARNING: Variable AUTHORITY must be defined ("user" or "admin"), test skipped.\n" && exit 1

[ -z "$LR_ID" ] && LR_ID=1
[ -z "$AUTH_ID" ] && AUTH_ID=1
[ -z "$READ" ] && READ=0
[ -z "$WRITE" ] && WRITE=0

[ $# -eq 1 ] && [ "$1" == "-q" ] && QUIET=true && unset VERBOSE

if [ $QUIET == "false" ]; then printf "Unlocking LR ${LR_ID} by ${AUTHORITY} ${AUTH_ID}...\n\n"; fi

$CONTROL $VERBOSE unlock $DEV   \
    --locking-range $LR_ID      \
    --${AUTHORITY} $AUTH_ID     \
    --verify-pin $PIN           \
    --read-locked $READ         \
    --write-locked $WRITE       \
    || { printf "\nFailed to unlock the locking range.\n" && exit 1; }

if [ $QUIET == "false" ]; then printf "\nDone.\n"; fi
